{
  "swagger": "2.0",
  "info": {
    "description": "Try out the user management api on this site.",
    "version": "1.3.2",
    "title": "User Management"
  },
  "host": "userservice.biz.tm",
  "basePath": "/v1/",
  "tags": [
    {
      "name": "users",
      "description": "All user data"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "description": "Returns all users",
        "operationId": "getUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a new user",
        "description": "Creates a new user.",
        "operationId": "createUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User that needs to be created",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Users"
                },
                {
                  "required": [
                    "forename",
                    "name",
                    "email",
                    "password"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login a user",
        "description": "Login and get your user id for further work.",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "type": "string",
                  "example": "bolter@thh-brandenburg.de"
                },
                "password": {
                  "type": "string",
                  "example": "MySuperSecretPassword"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{uuid}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Find user by uuid",
        "description": "Returns a single user",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid of user to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Updated user",
        "description": "Update a user. All attributes inside the body are optional.",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid of user that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes user",
        "description": "Delete a user",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "id of user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/users/{uuid}/confirmEmail": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Confirm email",
        "description": "Confirm a users email address",
        "operationId": "confirmEmail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid of user to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{uuid}/avatar": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get avatar URL",
        "description": "Get a URL to avater of user",
        "operationId": "getAvatar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid of user to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Upload avatar",
        "description": "Upload a new avater",
        "operationId": "setAvatar",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid of user to return",
            "required": true,
            "type": "string"
          },
          {
            "name": "avater",
            "in": "formData",
            "description": "Image file of user's avatar",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "forename": {
          "type": "string",
          "example": "Philipp"
        },
        "name": {
          "type": "string",
          "example": "Bolte"
        },
        "email": {
          "type": "string",
          "example": "bolter@thh-brandenburg.de"
        },
        "password": {
          "type": "string",
          "example": "MySuperSecretPassword"
        },
        "birthday": {
          "type": "string",
          "example": "2019-03-01"
        },
        "postcode": {
          "type": "string",
          "example": ""
        },
        "city": {
          "type": "string",
          "example": ""
        },
        "street": {
          "type": "string",
          "example": ""
        },
        "house_number": {
          "type": "integer",
          "example": ""
        },
        "role": {
          "type": "string",
          "example": ""
        },
        "newsletter_subscribed": {
          "type": "boolean",
          "example": "true"
        },
        "avatar": {
          "type": "string",
          "example": ""
        },
        "bio": {
          "type": "string",
          "example": ""
        }
      },
      "xml": {
        "name": "Users"
      }
    }
  },
  "externalDocs": {
    "description": "GitHub Repository of API",
    "url": "https://github.com/strumswell/UserManagement-API"
  }
}
